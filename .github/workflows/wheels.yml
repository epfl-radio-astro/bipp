# Workflow to build and test wheels
name: Wheel builder

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" , "pypi" ]
  release:
    types: [published]


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Build the wheels for Linux, and macOS for Python 3.9 and newer
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}

    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        platform_id: [manylinux_x86_64]
        manylinux_image: [manylinux2014]
        python: [39, 310, 311, 312]

    steps:
      - name: Checkout bipp
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11" # update once build dependencies are available

      - name: Build and test wheels
        env:
          CIBW_PRERELEASE_PYTHONS: ${{ matrix.prerelease }}
          CIBW_ENVIRONMENT: BIPP_CMAKE_ARGS="-DBLAS_LIBRARIES=/usr/lib64/libopenblaso.so.0"
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS: all
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
          # CIBW_TEST_REQUIRES: pybind11 scikit-build cmake
          CIBW_TEST_COMMAND: python -c "import bipp"
          CIBW_BUILD_VERBOSITY: 1
          # casacore has no wheel for 3.12
          CIBW_TEST_SKIP: "*cp312*"
          CIBW_BEFORE_ALL_LINUX: >
            cd ${HOME} &&
            yum install -y openblas-openmp fftw-devel wget &&
            bash {project}/.github/build_tools/install_finufft.sh

        run: bash .github/build_tools/build_wheels.sh

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bipp-cibw-wheels-cp${{ matrix.python }}-${{ matrix.platform_id }}
          path: wheelhouse/*.whl

  # Build the source distribution under Linux
  build_sdist:
    name: Source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout bipp
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Build source distribution
        run: |
          python -m pip install twine build
          python -m build --sdist

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bipp-cibw-sdist
          path: dist/*.tar.gz

 # Upload wheels
  pypi-publish:
    name: Upload release to PyPI
    # if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    environment:
      name: pypi
    needs: [build_wheels, build_sdist]
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: bipp-cibw-*
          path: dist
          merge-multiple: true

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true

